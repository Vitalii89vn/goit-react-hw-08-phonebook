{"version":3,"file":"static/js/342.b6322dcd.chunk.js","mappings":"wMACA,EAA4B,+BAA5B,EAAiE,yB,6BCDpDA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,E,UCCnC,EAA+B,mC,SCClBC,EAAe,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC3B,OACI,mBAAQC,UAAYC,EAAkBC,KAAK,SAA3C,SAAsDH,GAE7D,ECEYI,EAAc,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MACXT,GAAWU,EAAAA,EAAAA,IAAYZ,GACzBa,GAASC,EAAAA,EAAAA,MACTC,GAAWD,EAAAA,EAAAA,MAqBf,OACI,gBAAKR,UAAWC,EAAhB,UACI,kBAAMS,SArBO,SAAAC,GACjBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,OACTC,EAAOF,EAAKG,SAASD,KAAKE,MAC1BC,EAASL,EAAKG,SAASE,OAAOD,MACpCrB,EAASuB,MAAK,SAAAC,GAAI,OAAIA,EAAKL,KAAKM,gBAAkBN,EAAKM,aAArC,IAEdC,IAAAA,OAAAA,QAAA,UAA2BP,EAA3B,4BAEAX,GAASmB,EAAAA,EAAAA,IAAW,CAChBR,KAAAA,EACAG,OAAAA,KAIStB,EAASuB,MAAK,SAAAC,GAAI,OAAIA,EAAKL,KAAKM,gBAAkBN,EAAKM,aAArC,KACpBR,EAAKW,OACvB,EAIO,WACI,kBAAOC,QAASlB,EAAhB,mBACA,kBACIL,KAAK,OACLwB,GAAInB,EACJQ,KAAK,OACLY,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,KAGZ,kBAAOJ,QAAShB,EAAhB,qBACA,kBACIP,KAAK,MACLwB,GAAIjB,EACJM,KAAK,SACLY,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,KAEZ,gBAAK7B,UAAWC,EAAhB,UAAyB,SAACH,EAAD,gCAKxC,E,8BCtDYgC,EAAS,WAClB,IAAM1B,GAAWC,EAAAA,EAAAA,MAKjB,OACI,UAAC,IAAD,CAAW0B,KAAK,MAAMC,GAAG,WAAWC,MAAM,QAAQC,QAAQ,OAAOC,cAAc,SAA/E,mCAEI,SAAC,EAAAC,cAAD,CAAeC,UAAW,EACtBC,gBAAiB,IACjBC,SATM,SAAC5B,GACfP,GAASoC,EAAAA,EAAAA,IAAa7B,EAAEG,OAAOG,OAClC,MAUJ,ECnBD,EAA0B,iCAA1B,EAA0E,sC,UCO7DwB,EAAkB,SAAC,GAAyB,IAAvBf,EAAsB,EAAtBA,GAAIX,EAAkB,EAAlBA,KAAM2B,EAAY,EAAZA,MAClCtC,GAAWC,EAAAA,EAAAA,MAGjB,OACI,SAAC,IAAD,CACI0B,KAAK,MACLC,GAAG,UACHC,MAAM,QAENU,UAAU,sCACVC,aAAa,IACbC,aAAa,IAPjB,UAQI,gBAAI7C,UAAWC,EAAf,WACI,iBAAKD,UAAWC,EAAhB,WAAkC,0BAAOc,KAAY,0BAAO2B,QAC5D,SAAC,IAAD,CACII,QAAQ,QACRF,aAAa,IACbG,QAAQ,IACRf,GAAG,UACHC,MAAM,QACNe,OAAQ,CAAEhB,GAAI,UAAWC,MAAO,SAChCgB,OAAQ,CAAEjB,GAAI,UAAWC,MAAO,SAChCU,UAAU,oEACVO,QAtBK,kBAAM9C,GAAS+C,EAAAA,EAAAA,IAAczB,GAA7B,EAaT,wBAcf,EChCY0B,EAAc,WACvB,IAAMxD,GAAWU,EAAAA,EAAAA,IAAYZ,GAGvB2D,GAFS/C,EAAAA,EAAAA,IAAYgD,EAAAA,IAEKjC,cAC1BkC,EAAkB3D,EAAS4D,QAC7B,SAAAC,GAAO,OAAIA,EAAQ1C,KAAKM,cAAcqC,SAASL,EAAxC,IAEX,OACI,wBACKE,EAAgBI,OAAS,GAAKJ,EAAgBK,KAAI,gBAAGlC,EAAH,EAAGA,GAAIX,EAAP,EAAOA,KAAMG,EAAb,EAAaA,OAAb,OAC/C,SAACuB,EAAD,CAEIf,GAAIA,EACJX,KAAMA,EACN2B,MAAOxB,GAHFQ,EAFsC,KAU9D,ECTD,EAZqB,WAEjB,OACI,iCACI,uCACA,SAACvB,EAAD,KACA,sCACA,SAAC2B,EAAD,KACA,SAACsB,EAAD,MAGX,C","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/contacts/selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/Button/SubmitButton.module.css?ef4e","components/Button/SubmitButton.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactListItem/ContactListItem.module.css?7127","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.jsx","pages/ContactsPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ContactForm_container__qpJ1N\",\"btn\":\"ContactForm_btn__wll+u\"};","export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;","// extracted by mini-css-extract-plugin\nexport default {\"customButton\":\"SubmitButton_customButton__7UGET\"};","import css from './SubmitButton.module.css'\n\nexport const SubmitButton = ({ children }) => {\n    return (\n        <button className={ css.customButton} type=\"submit\">{ children}</button>\n    )\n}","import { nanoid } from 'nanoid'\nimport css from \"./ContactForm.module.css\"\nimport Notiflix from 'notiflix';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport { SubmitButton } from 'components/Button/SubmitButton';\n\nexport const ContactForm = () => {\n    const dispatch = useDispatch();\n    const contacts = useSelector(selectContacts);\n    let nameId = nanoid();\n    let numberId = nanoid();\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        const form = e.target;\n        const name = form.elements.name.value;\n        const number = form.elements.number.value\n        contacts.find(item => item.name.toLowerCase() === name.toLowerCase())\n            ?\n            Notiflix.Notify.failure(`${name} is already in contacts`)\n            :\n            dispatch(addContact({\n                name,\n                number\n            }\n            ));\n      \n        const findName = contacts.find(item => item.name.toLowerCase() === name.toLowerCase());\n        if (!findName) form.reset();\n    };\n\n    return (\n        <div className={css.container}>\n            <form onSubmit={handleSubmit}>\n                <label htmlFor={nameId}>Name</label>\n                <input\n                    type=\"text\"\n                    id={nameId}\n                    name=\"name\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    required\n\n                />\n                <label htmlFor={numberId}>Number</label>\n                <input\n                    type=\"tel\"\n                    id={numberId}\n                    name=\"number\"\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    required\n                />\n                <div className={css.btn}><SubmitButton>Add contact</SubmitButton>\n                </div>\n            </form>\n        </div>\n    )\n}\n","// import css from \"./Filter.module.css\"\nimport { useDispatch } from \"react-redux\";\nimport { updateFilter } from 'redux/filter/filterSlice'\nimport { DebounceInput } from 'react-debounce-input';\nimport { Container } from \"@chakra-ui/react\";\n\nexport const Filter = () => {\n    const dispatch = useDispatch();\n    const setFilter = (e) => {\n        dispatch(updateFilter(e.target.value))\n    };\n  \n    return (\n        <Container maxW='70%' bg='blue.600' color='black' display='flex' flexDirection='column'>\n            Find contacts by name\n            <DebounceInput minLength={2}\n                debounceTimeout={300}\n                onChange={setFilter}\n            ></DebounceInput></Container>\n    )\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contact\":\"ContactListItem_contact__gtH4X\",\"contact_info\":\"ContactListItem_contact_info__LkbaM\"};","import PropTypes from 'prop-types';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { useDispatch } from \"react-redux\";\nimport { Container} from '@chakra-ui/react';\nimport css from './ContactListItem.module.css'\nimport { Button } from '@chakra-ui/react';\n\n\nexport const ContactListItem = ({ id, name, phone }) => {\n    const dispatch = useDispatch();\n    const handleDelete = () => dispatch(deleteContact(id));\n\n    return (\n        <Container\n            maxW='70%'\n            bg='#cdcdee'\n            color='black'\n            // border='2px solid black'\n            boxShadow='0 0 1px 2px rgba(88, 144, 255, .75)'\n            borderRadius='5'\n            marginBottom='6'>\n            <li className={css.contact}>\n                <div className={css.contact_info}><span>{name}</span><span>{phone}</span></div>\n                <Button\n                    variant='solid'\n                    borderRadius='5'\n                    padding='5'\n                    bg='#1515a0'\n                    color='white'\n                    _hover={{ bg: '#4e4eeb', color: \"black\" }}\n                    _focus={{ bg: '#4e4eeb', color: \"black\" }}\n                    boxShadow='0 0 1px 2px rgba(88, 144, 255, .75), 0 1px 1px rgba(0, 0, 0, .15)'\n                    onClick={handleDelete}\n                >Delete</Button>\n            </li>\n        </Container>\n    )\n};\n\nContactListItem.propTypes = {\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n};","import { ContactListItem } from 'components/ContactListItem/ContactListItem';\nimport { useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { selectFilter } from 'redux/filter/filterSlice';\n\nexport const ContactList = () => {\n    const contacts = useSelector(selectContacts);\n    const filter = useSelector(selectFilter);\n    \n    const normalizedFilter = filter.toLowerCase();\n    const visibleContacts = contacts.filter(\n        contact => contact.name.toLowerCase().includes(normalizedFilter));\n\n    return (\n        <ul>\n            {visibleContacts.length > 0 && visibleContacts.map(({ id, name, number }) => (\n                <ContactListItem\n                    key={id}\n                    id={id}\n                    name={name}\n                    phone={number}\n                />\n            ))}\n        </ul>\n    )\n};\n","import { ContactForm } from \"components/ContactForm/ContactForm\";\nimport { Filter } from \"components/Filter/Filter\";\nimport { ContactList } from \"components/ContactList/ContactList\";\n\nconst ContactsPage = () => {\n        \n    return (\n        <>\n            <h1>Phonebook</h1>\n            <ContactForm />\n            <h2>Contacts</h2>\n            <Filter />\n            <ContactList />\n        </>\n    )\n};\nexport default ContactsPage;"],"names":["selectContacts","state","contacts","items","SubmitButton","children","className","css","type","ContactForm","dispatch","useDispatch","useSelector","nameId","nanoid","numberId","onSubmit","e","preventDefault","form","target","name","elements","value","number","find","item","toLowerCase","Notiflix","addContact","reset","htmlFor","id","pattern","title","required","Filter","maxW","bg","color","display","flexDirection","DebounceInput","minLength","debounceTimeout","onChange","updateFilter","ContactListItem","phone","boxShadow","borderRadius","marginBottom","variant","padding","_hover","_focus","onClick","deleteContact","ContactList","normalizedFilter","selectFilter","visibleContacts","filter","contact","includes","length","map"],"sourceRoot":""}